<!DOCTYPE html>
<html>
    <head>

        <meta charset="UTF-8">

        <title><%= htmlWebpackPlugin.options.title %></title>
        <meta name="description" content="">
        <meta name="author" content="">

        <meta name="viewport" content="width=1, initial-scale=1.0">

        <link rel="stylesheet" href="https://cdn.rawgit.com/tonsky/FiraCode/1.204/distr/fira_code.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css" integrity="sha384-Zug+QiDoJOrZ5t4lssLdxGhVrurbmBWopoEl+M6BdEfwnCJZtKxi1KgxUyJq13dy" crossorigin="anonymous">
        <link rel="stylesheet" href="http://rdf2h.github.io/style.css">
        <link rel="shortcut icon" href="./rdf_flyer.24.png">
    </head>
    <body>
        <section class="container-fluid">
            <h1 class="display-1">RDF2h manual</h1>
            <p class="lead">
                This is a step by step demonstration and occasional explanation of the RDF2h features. You can edit all examples in the browser
                and executed scripts again to see the effects of changes in the code.
            </p>
        </section>
        <section class="step container-fluid">
            <h1>Defining a renderer</h1>
            The following is a renderer graph that defines a renderer for
            <code><code class="c-green">rdfs</code>:<code class="c-red">Resource</code></code>
            <script type="text/turtle" class="editor renderers">
                @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
                @prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                [ a r2h:Renderer; 
                    r2h:type rdfs:Resource;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix dc: <http://dublincore.org/2012/06/14/dcelements#>}} 
                    The title: {{dc:title}} ...."""
                ].
            </script>
            Applied to the following data graph:
            <script type="text/turtle" class="editor data">
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                <http://example.org/> dc:title "An example".
            </script>
            
            <code type="application/javascript" class="editor">
                return new RDF2h(renderers).render(data, "http://example.org/");
            </code>
        </section>
        <section class="step container-fluid">
            <h1>Property paths</h1>
            The previous example contained a mustache renderer following a property (
            <code><code class="c-green">dc</code>:<code class="c-red">title</code></code>
            )to its value. The renderer defined in the following graph follows the
            <code><code class="c-green">foaf</code>:<code class="c-red">knows</code></code>
            property backwards and then the
            <code><code class="c-green">foaf</code>:<code class="c-red">knows</code></code>
            property forwards.
            <script type="text/turtle" class="editor renderers">
                @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                @prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
                [ a r2h:Renderer;
                    r2h:type rdfs:Resource;
                    r2h:context r2h:Default;
                    r2h:mustache "{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}Known by: {{foaf:knows<-/foaf:name}}"
                ].
            </script>
            Applied to the following data graph:
            <script type="text/turtle" class="editor data">
                @prefix foaf: <http://xmlns.com/foaf/0.1/>.
                <http://example.org/b> foaf:knows <http://example.org/a>.
                <http://example.org/b> foaf:name "Bob".
            </script>
            
            <code type="application/javascript" class="editor">
                return new RDF2h(renderers).render(data, "http://example.org/a");
            </code>
        </section>

        <section class="step container-fluid">
            <h1>Loops and conditions</h1>
            We can use mustache syntax to iterate over the different values of a property. The same also 
            works with inverse properties. The following renderer will render all friends of a Person.
            <script type="text/turtle" class="editor renderers">
                @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                @prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
                @prefix foaf: <http://xmlns.com/foaf/0.1/> .
                [ a r2h:Renderer;
                    r2h:type foaf:Person;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}
                        Name: {{foaf:name}}<br>
                        {{#foaf:knows}}
                        <li>{{.}}</li>
                        {{/foaf:knows}}"""
                ].
            </script>
            Applied to the following data graph:
            <script type="text/turtle" class="editor data">
                @prefix foaf: <http://xmlns.com/foaf/0.1/>.
                <http://example.org/a> 
                        foaf:knows <http://example.org/b>, 
                                <http://example.org/c>,
                                <http://example.org/d>;
                        a foaf:Person;
                        foaf:name "Alice".
                <http://example.org/b> foaf:name "Bob".
            </script>
            
            <code type="application/javascript" class="editor">
                return new RDF2h(renderers).render(data, "http://example.org/a");
            </code>
            <h3>Additional features</h3>
             Additionally to the possibility of looping the values of a property RDF2h supporrts prefixing the property path with
            <code class="c-red">+</code> , the resulting expression evaluates to true when the path exists and to false otherwise. Note that this doesn't change
            the evaluation context, so that the value of
            <code class="c-red">.</code> doesn't change and the property needs to be accesses like outside the block. It may be used in combination with a loop over
            the property.
            <br> Example:
            <script type="text/turtle" class="editor">
                """Name: {{foaf:name}}</br>
                {{#+foaf:knows}}
                Knows:
                <ul>
                {{#foaf:knows}}
                <li>{{.}}</li>
                {{/foaf:knows}}
                </ul>
                {{/+foaf:knows}}
                {{^+foaf:knows}}
                {{foaf:name}} doesn't know anybody.
                {{/+foaf:knows}}"""
            </script>
            </section>

        <section class="step container-fluid">
            <h1>Delegating back to renderer</h1>
            By invoking
            <code>:<code class="c-red">render</code></code>
            a resource is given back to the rendering engine for rendering. Typically
            <code>:<code class="c-red">render</code></code>
            is invoked between triple-braces to avoid double escaping.
            <script type="text/turtle" class="editor renderers">
                @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                @prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
                @prefix foaf: <http://xmlns.com/foaf/0.1/> .
                [ a r2h:Renderer;
                    r2h:type foaf:Person;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}
                        Name: {{foaf:name}}<br>
                        <ul>{{#foaf:account}}
                        <li>{{{:render .}}}</li>
                        {{/foaf:account}}</ul>"""
                ].
                [ a r2h:Renderer;
                    r2h:type foaf:OnlineAccount;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}
                        <div class="account">
                            Connect with {{foaf:accountName}} on {{foaf:accountServiceHomepage}}
                        </div>"""
                ].
            </script>
            Applied to the following data graph:
            <script type="text/turtle" class="editor data">
                @prefix foaf: <http://xmlns.com/foaf/0.1/>.
                <http://example.org/a>  a foaf:Person;
                    foaf:name "Alice";
                    foaf:account
                        [   a   foaf:OnlineAccount, foaf:OnlineChatAccount;
                            foaf:accountServiceHomepage <http://www.freenode.net/>;
                            foaf:accountName "Alice" ],
                        [   a   foaf:OnlineAccount, foaf:OnlineGamingAccount;
                            foaf:accountServiceHomepage <http://www.nerds.play/>;
                            foaf:accountName "TheAlice" ].
            </script>
            
            <code type="application/javascript" class="editor">
                return new RDF2h(renderers).render(data, "http://example.org/a");
            </code>
        </section>

        <section class="step container-fluid">
            <h1>Selection of renderer</h1>
             With the following renderers there's a more specific renderer for
            <code><code class="c-green">foaf</code>:<code class="c-red">OnlineChatAccount</code></code>
            that can be used instead of the more generic renderer for
            <code><code class="c-green">foaf</code>:<code class="c-red">OnlineAccount</code></code>
            . To allow RDF2h to know which type is more specific we also added the statement
            <code><code class="c-green">foaf</code>:<code class="c-red">OnlineChatAccount</code>
            <code class="c-green">rdfs</code>:<code class="c-red">subClassOf</code>
            <code class="c-green">foaf</code>:<code class="c-red">OnlineAccount</code></code>
            .
            <script type="text/turtle" class="editor renderers">
                @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                @prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
                @prefix foaf: <http://xmlns.com/foaf/0.1/> .
                [ a r2h:Renderer;
                    r2h:type foaf:Person;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}
                        Name: {{foaf:name}}<br>
                        <ul>{{#foaf:account}}
                        <li>{{{:render .}}}</li>
                        {{/foaf:account}}</ul>"""
                ].
                [ a r2h:Renderer;
                    r2h:type foaf:OnlineAccount;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}
                        <div class="account">
                            Connect with {{foaf:accountName}} on {{foaf:accountServiceHomepage}}
                        </div>"""
                ].
                [ a r2h:Renderer;
                    r2h:type foaf:OnlineChatAccount;
                    r2h:context r2h:Default;
                    r2h:mustache """{{@prefix foaf: <http://xmlns.com/foaf/0.1/>}}
                        <div class="account">
                            Chat with {{foaf:accountName}} on {{foaf:accountServiceHomepage}}
                        </div>"""
                ].
                foaf:OnlineChatAccount rdfs:subClassOf foaf:OnlineAccount.
            </script>
            
            <code type="application/javascript" class="editor">
                return new RDF2h(renderers).render(data, "http://example.org/a");
            </code>
        </section>

        <section class="step container-fluid">
            <h1>Javascript instead of mustache</h1>
            Mustache provides a very simple way to render resources. However occasionally its possibilities just arent enough. As an
            alternative you can use the
            <code><code class="c-green">r2h</code>:<code class="c-red">javaScript</code></code>
            property which points to some js code writing that returns the rendering result. The code has access to the following
            variables:
            <code>n</code>
            ,
            <code>context</code>
            ,
            <code>$rdf</code>
            and to the function
            <code>render(graphNode, context)</code>
            .
            <script type="text/turtle" class="editor renderers">
                @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
                @prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
                @prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.
                @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
                @prefix foaf: <http://xmlns.com/foaf/0.1/> .
                [ a r2h:Renderer;
                    r2h:type foaf:Person;
                    r2h:context r2h:Default;
                    r2h:javaScript """
                        let foaf = suffix => $rdf.sym("http://xmlns.com/foaf/0.1/"+suffix);
                        print(n.out(foaf("name")).value+"<br/>");
                        let known = n.out(foaf("knows")).split();
                        known.sort(function(a,b) {
                            var gn = foaf("name");
                            return a.out(gn).value.localeCompare(b.out(gn).value);
                        });
                        print("<ul>");
                        known.forEach(function(k) {
                            print("<li>"+render(k)+"</li>");
                        });
                        print("</ul>");
                        """
                ].
            </script>
            Applied to the following data graph:
            <script type="text/turtle" class="editor data">
                @prefix foaf: <http://xmlns.com/foaf/0.1/>.
                <http://example.org/a> 
                        foaf:knows <http://example.org/c>, 
                                <http://example.org/b>,
                                <http://example.org/d>;
                        a foaf:Person;
                        foaf:name "Alice".
                <http://example.org/b> a foaf:Person; foaf:name "Bob".
                <http://example.org/c> a foaf:Person; foaf:name "Caroline".
                <http://example.org/d> a foaf:Person; foaf:name "Danny"; foaf:knows <http://example.org/e>.
                <http://example.org/e> a foaf:Person; foaf:name "Eric".
            </script>
            
            <code type="application/javascript" class="editor">
                return new RDF2h(renderers).render(data, "http://example.org/a");
            </code>
            Note the recursive invocation of the renderer. This would lead to an infinite loop if one of the persons known by Alice
            would know her back. A way to avoid this would be to change context by invoking the
            <code>render</code>
            function with a second argument and to provide a renderer that doesn't further expands the value of the
            <code><code class="c-green">foaf</code>:<code class="c-red">knows</code></code>
            property.
        </section>
        <div class="rand py-1 w-100">
            <div class="container-fluid d-flex justify-content-between">
                <p class="mb-0">
                    <a href="https://github.com/rdf2h">Have a look at the Github Repository</a>
                </p>
                <p class="mb-0">
                    <a href="https://factsmission.com/">RDF2h is developed by FactsMission</a>
                </p>
            </div>
        </div>
    </body>
</html>